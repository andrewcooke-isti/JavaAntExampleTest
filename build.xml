<project xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:cs="antlib:com.puppycrawl.tools.checkstyle"
         name="java-example" default="dist" basedir=".">

    <description>
        example build file for java
    </description>

    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="lib" location="lib"/>
    <property name="jars" location="jars"/>
    <property name="reports" location="reports"/>


    <target name="bootstrap"
            description="download the ivy jars">
        <mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ivy-2.3.0.jar"
             src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.3.0/ivy-2.3.0.jar"/>
    </target>

    <target name="init">
        <tstamp/>
        <mkdir dir="${build}"/>
        <mkdir dir="${lib}"/>
        <mkdir dir="${jars}"/>
        <mkdir dir="${reports}/junit"/>
    </target>

    <target name="compile" depends="init,resolve"
            description="compile the source">
        <javac srcdir="${src}/main/java" destdir="${build}"
               classpathref="compile.path"
               includeantruntime="false">
            <classpath>
                <fileset dir="${jars}" includes="*.jar"/>
            </classpath>
            <compilerarg value="-Xlint"/>
        </javac>
        <copy todir="${build}" failonerror="no">
            <fileset dir="${src}/main/resources"/>
        </copy>
    </target>

    <target name="test" depends="clean,compile"
            description="run the tests">
        <javac srcdir="${src}/test/java" destdir="${build}"
               classpathref="test.path"
               includeantruntime="false">
            <compilerarg value="-Xlint"/>
            <classpath>
                <fileset dir="${jars}" includes="*.jar"/>
            </classpath>
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}/test/resources"/>
        </copy>
        <junit haltonerror="yes">
            <classpath refid="test.path"/>
            <classpath>
                <pathelement path="${build}"/>
            </classpath>
            <classpath>
                <fileset dir="${jars}" includes="*.jar"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${reports}/junit">
                <fileset dir="${build}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
        <mkdir dir="${dist}/lib"/>
        <jar jarfile="${dist}/lib/awips-${DSTAMP}.jar" basedir="${build}">
            <restrict>
                <archives>
                    <zips>
                        <fileset dir="${lib}" includes="**/*.jar"/>
                        <fileset dir="${jars}" includes="**/*.jar"/>
                    </zips>
                </archives>
            </restrict>
        </jar>
    </target>

    <target name="docs" depends="init,resolve"
            description="generate javadocs">
        <javadoc destdir="${reports}/javadoc" sourcepath="${src}/main/java"
                classpathref="compile.path" linksource="true" private="true">
            <classpath>
                <fileset dir="${jars}" includes="*.jar"/>
            </classpath>
        </javadoc>
    </target>

    <!-- this requires checkstyle-5.6-all.jar in the ants lib -->
    <target name="check"
            description="run checkstyle">
        <cs:checkstyle config="checkstyle.xml">
            <cs:fileset dir="${src}/main/java" includes="**/*.java"/>
            <cs:property key="checkstyle.cache.file" file="${build}/cachefile"/>
        </cs:checkstyle>
    </target>

    <target name="clean"
            description="clean up">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${reports}"/>
    </target>

    <target name="resolve"
            description="download required dependencies">
        <ivy:retrieve/>
        <ivy:report todir="${reports}/ivy" graph="false"/>
        <ivy:cachepath pathid="compile.path" conf="compile"/>
        <ivy:cachepath pathid="test.path" conf="test"/>
    </target>

</project>
